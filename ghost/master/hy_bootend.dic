OnFirstBoot //Dialogue when you first open the ghost
{
	lastTalk = ""
	passsec = 0
	passmin = 0
	passhour = 0
	deleteshitai = "OFF"
	todayswaters = 0
	totalwaters = 0
	currentdrinkstreak = 0
	extrasipstoday = 0
	extrasipstotal = 0
	Config.AutoUpdates = 1
	AutoUpdates.CheckedToday = 0
	AutoUpdates.GhostReady = 0
	AutoUpdates.ShellReady = 0
	AutoUpdates.BalloonReady = 0
	
	notif = "None"
	volume = 50
	HourNotifs = "OFF"
	
	highestdrinkstreak = 0
	newhighscorelatch = 0
	
	Config.OffscreenDialogue = 0
	Config.RemindWhenMinimized = 0
	
	Scale.X = 100
	Scale.Y = 100
	
	Config.MatchShellPosition = 1
	
	
	"\0\s[0](Thank you for choosing to hydrate.)\w8\n\n(Reminders will be issued every hour;\w4 double click the bottle if you'd like to change the rate or switch shells!)"
}

OnInitialize
{
	OnUpdateVars //Ensure these are set even if updated via things other than normal network update
}

OnUpdateVars
{
	//——— 2.0.2 ———
	if !ISVAR("Config.MatchShellPosition"); Config.MatchShellPosition = 1
	if !ISVAR("Config.AutoUpdates")
	{
		if ISVAR('AutoUpdates') && AutoUpdates[0] == "OFF"; Config.AutoUpdates = 0
		else; Config.AutoUpdates = 1
	}
	ERASEVAR("AutoUpdates")
	if !ISVAR("AutoUpdates.CheckedToday"); AutoUpdates.CheckedToday = 0
	if !ISVAR("AutoUpdates.GhostReady"); AutoUpdates.GhostReady = 0
	if !ISVAR("AutoUpdates.ShellReady"); AutoUpdates.ShellReady = 0
	if !ISVAR("AutoUpdates.BalloonReady"); AutoUpdates.BalloonReady = 0
	
	ERASEVAR("talkrate")
	ERASEVAR("timeouttime")
	
	
	//——— 2.0.1 ———
	if !ISVAR("Config.RemindWhenMinimized"); Config.RemindWhenMinimized = 0
	if !ISVAR("Scale.X")
	{
		Scale.X = nowscale
		if Scale.X == ""; Scale.X = 100
	}
	if !ISVAR("Scale.Y")
	{
		Scale.Y = nowscale
		if Scale.Y == ""; Scale.Y = 100
	}
	if !ISVAR("highestdrinkstreak"); highestdrinkstreak = 0
	if !ISVAR("newhighscorelatch"); newhighscorelatch = 0
	
	//——— 2.0.0 ———
	if !ISVAR("Config.OffscreenDialogue"); Config.OffscreenDialogue = 0
	if !ISVAR("Config.IncludeCustomSound"); Config.IncludeCustomSound = 0
	
	
	//---1.1.0---
	/*
	totalwaters = 0
	currentdrinkstreak = 0
	extrasipstoday = 0
	extrasipstotal = 0
	*/
	if ISVAR('totalwaters') == 0; totalwaters = 0
	if ISVAR('currentdrinkstreak') == 0; currentdrinkstreak = 0
	if ISVAR('extrasipstoday') == 0; extrasipstoday = 0
	if ISVAR('extrasipstotal') == 0; extrasipstotal = 0
	
	if !ISVAR("notif"); notif = "None"
	if !ISVAR("volume"); volume = 50
	if !ISVAR("HourNotifs"); HourNotifs = "OFF"
}

OnBoot //Normal booting
{
	lastTalk = ""
	passsec = 0
	passmin = 0
	passhour = 0
	todayswaters = 0
	extrasipstoday = 0
	AutoUpdates.CheckedToday = 0
	
	"\1\s[-1]\0\s[0]"
	--
	if Config.AutoUpdates
	{
		"\![update,ghost+shell+balloon,checkonly]"
	}
	--
	OnSendStats
	--
	"\0\s[0](Thank you for choosing to hydrate today.)\w8\n\n"
	--
	if aitalkinterval == 0
	{
		"(Reminders are currently off.)\w8\n\n"
	}
	else
	{
		_rate = TalkRateLabel(aitalkinterval)
		"(Reminders are set to be issued every %(_rate).)\w8\n\n"
		"(Reminders are set for every %(_rate).)\w8\n\n"
		"(Reminders are set to every %(_rate).)\w8\n\n"
		"(You will be given reminders every %(_rate).)\w8\n\n"
		"(You will be given a reminder every %(_rate).)\w8\n\n"
	}
	--
	"(You've got this!)"
	"(Take care of yourself!)"
	"(Be good to you!)"
	"(It's ok to miss one,\w4 but try not to miss two in a row!)"
}

OnOtherGhostBooted
{
	OnSendStats
}

OnGhostCallComplete
{
	OnSendStats
}

OnClose
{
	OnSendStats //A bit superfluous perhaps...
	--
	if todayswaters > 0
	{
		_s = "s"; if todayswaters == 1; _s = ""
		"\0\s[0](You took %(todayswaters) sip%(_s) of water today,\w4 well done!)"
	}
	else
	{
		"\0\s[0](Take care!)"
	}
	--
	"\w8\w8\-"
}

OnWindowStateMinimize
{
	OnHydrateGhost.GetStats //This is the ONE place so far that I have to call this directly... if I go to another event it does not work
}

OnWindowStateRestore
{
	OnSendStats
	--
	OnSurfaceRestore
}

OnGhostChanging //Changing to another ghost
{
	if reference0 == "Hydrate" //If reloading
	{
		"\0\s[0](Reloading!)"
	}
	else
	{
		OnSendStats
		--
		if todayswaters > 0
		{
			"\0\s[0](You took %(todayswaters) sips of water today,\w4 well done!)"
		}
		else
		{
			"\0\s[0](Remind %(reference0) to hydrate too!)"
		}
	}
}

OnShellChanging
{
	//This gets the current ghost coordinates so that they don't jump around the screen when they change shells
	if Config.MatchShellPosition
	{
		"\![get,property,OnGetCoordsBefore,currentghost.scope(0).rect,currentghost.scope(0).y]"
	}
}

OnShellChanged
{
	if Config.MatchShellPosition
	{
		"\0\s[-1]\![get,property,OnGetCoordsAfter,currentghost.scope(0).rect,currentghost.scope(0).y]"
	}
	else; ShellChangedEnd
}

OnGetCoordsBefore //This gets the x coordinate
{
	ShellChange.BeforeX = reference0[0] //Horizontal position
	ShellChange.BeforeFeet = reference1 //Feet height
}

OnGetCoordsAfter : all
{
	//Take the feet height and subtract the height after it because we want to get how far above the feet height the Y coordinate needs to be to place the bottom where it needs to land!
	_AfterHeight = TOINT(reference1) - TOINT(reference0[1]) //Distance between feet and top
	_FinalY = TOINT(ShellChange.BeforeFeet) - TOINT(_AfterHeight) //Should be the new position where the top must go to make the feet be in the right spot
	
	AutoUpdates.ShellReady = 0
	
	"\0\![move,--X=%(ShellChange.BeforeX),--Y=%(_FinalY),--base=primaryscreen]"
	
	ERASEVAR("ShellChange.BeforeX","ShellChange.BeforeFeet")
	
	ShellChangedEnd
}

ShellChangedEnd
{
	//Craftman info
	"\![get,property,OnShellAuthor,currentghost.shelllist.current.craftman,currentghost.shelllist.current.craftmanw,currentghost.shelllist.current.craftmanurl]"
	--
	"\1\s[-1]\0\s[0]"
	--
	OnSendStats
	--
	if SHIORI3FW.ShellName == SHIORI3FW.ShellNameOld //If the shell they changed to is the same as the last one
	{
		"(Reloaded %(SHIORI3FW.ShellName)!)"
	}
	elseif SHIORI3FW.ShellName == "Clear" //If they've switched back to the default
	{
		"(Default water.)"
	}
	else
	{
		"(Now using %(SHIORI3FW.ShellName).)\w8\w8\n\n" //If they're using anything other than the default
		--
		ShellChangeComments
	}
	--
	if Config.AutoUpdates
	{
		"\![update,shell,checkonly]"
	}
}

OnShellAuthor
{
	shellauthor = IARRAY
	shellauthor[0] = reference0 //craftman
	if shellauthor[0] == ""; shellauthor[0] = reference1 //Craftman is replaced by craftmanw if craftman is empty
	shellauthor[1] = reference1 //craftmanw
	shellauthor[2] = reference2 //craftmanurl
}

//Character ID, category name, part name, option, valid / invalid 0, thumbnail path
OnNotifyDressupInfo
{
	availabledressups = IARRAY //This one is to display the dressup menu
	currentdressups = IARRAY //This one is so we can display which dressups are currently in use
	dressupcategories = IARRAY
	
	//Has to be reference.raw because parts of this are delimited with C_BYTE1
	foreach reference.raw; _dressup
	{
		_dressup = SPLIT(_dressup,C_BYTE1)
		
		_toadd = _dressup[1] + C_BYTE1 + _dressup[2]
		if _dressup[4] == 1; currentdressups ,= _toadd
		
		if ASUB(_dressup[1],dressupcategories) == -1; dressupcategories ,= _dressup[1]
		
		if _dressup[3] != ""; _toadd += C_BYTE1 + _dressup[3]
		availabledressups ,= _toadd
	}
}

OnDressupChanged
{
	//Because this runs BEFORE the notify event above, add a delay so that the changes are processed before sending stats...
	if reference4 == "script"; "\C\![timerraise,100,1,OnSendStats,dressupmenu]"
	else; "\![timerraise,100,1,OnSendStats]"
}