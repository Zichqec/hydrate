OnFirstBoot
{
	Stats.DrinksToday = 0
	Stats.DrinksTotal = 0
	Stats.CurrentDrinkStreak = 0
	Stats.HighestDrinkStreak = 0
	Stats.ExtraSipsToday = 0
	Stats.ExtraSipsTotal = 0
	newhighscorelatch = 0
	
	Config.AutoUpdates = 1
	AutoUpdates.CheckedToday = 0
	AutoUpdates.GhostReady = 0
	AutoUpdates.ShellReady = 0
	AutoUpdates.BalloonReady = 0
	
	Config.NotificationSound = "None"
	Config.NotificationCustomPath = ""
	Config.IncludeCustomSound = 0
	Config.NotificationVolume = 50
	
	Config.RemindWhenMinimized = 0
	
	Config.MatchShellPosition = 1
	
	Config.AutoShellChange = "Off"
	Config.AutoShellMinutes = 120
	AutoShell.LastChangeTime = GETSECCOUNT
	AutoShell.ChangingOnBoot = 0
	
	Config.AutoDressupChange = "Off"
	Config.AutoDressupMinutes = 60
	AutoDressup.LastChangeTime = GETSECCOUNT
	
	Config.EnableUninstall = 1
	Config.OffscreenDialogue = 0
	Config.HourNotifs = 0
	Config.ShellChangeComments = 0
	Config.RightClickWaterFacts = 0
	Config.RightClickEncouragement = 0
	legacyreloadlatch = 0
	
	Scale.X = 100
	Scale.Y = 100
	
	
	OnSendStats
	--
	"\0\s[0](Thank you for choosing to hydrate.)\w8\n\n(Reminders will be issued every hour;\w4 double click the bottle if you'd like to change the rate or switch shells!)"
}

OnInitialize
{
	OnUpdateVars //Ensure these are set even if updated via things other than normal network update
	AutoShell.ChangingOnBoot = 0
	
	//Stuff to set on actual boot only
	if reference0 != "reload"
	{
		Stats.DrinksToday = 0
		Stats.ExtraSipsToday = 0
		AutoUpdates.CheckedToday = 0
		opentime = GETSECCOUNT
		AutoShell.LastChangeTime = GETSECCOUNT
		AutoDressup.LastChangeTime = GETSECCOUNT
	}
}

OnUpdateVars
{
	//——— 2.0.4 ———
	ERASEVAR("currentdressups","availabledressups","dressupcategories")
	
	if !ISVAR("Stats.DrinksToday")
	{
		if ISVAR("todayswaters"); Stats.DrinksToday = todayswaters
		else; Stats.DrinksToday = 0
	}
	if !ISVAR("Stats.DrinksTotal")
	{
		if ISVAR("totalwaters"); Stats.DrinksTotal = totalwaters
		else; Stats.DrinksTotal = 0
	}
	if !ISVAR("Stats.CurrentDrinkStreak")
	{
		if ISVAR("currentdrinkstreak"); Stats.CurrentDrinkStreak = currentdrinkstreak
		else; Stats.CurrentDrinkStreak = 0
	}
	if !ISVAR("Stats.HighestDrinkStreak")
	{
		if ISVAR("highestdrinkstreak"); Stats.HighestDrinkStreak = highestdrinkstreak
		else; Stats.HighestDrinkStreak = 0
	}
	if !ISVAR("Stats.ExtraSipsToday")
	{
		if ISVAR("extrasipstoday"); Stats.ExtraSipsToday = extrasipstoday
		else; Stats.ExtraSipsToday = 0
	}
	if !ISVAR("Stats.ExtraSipsTotal")
	{
		if ISVAR("extrasipstotal"); Stats.ExtraSipsTotal = extrasipstotal
		else; Stats.ExtraSipsTotal = 0
	}
	
	if !ISVAR("Config.AutoShellMinutes")
	{
		if ISVAR("Config.AutoShellHours"); Config.AutoShellMinutes = Config.AutoShellHours * 60
		else; Config.AutoShellMinutes = 120
	}
	if !ISVAR("Config.AutoDressupMinutes")
	{
		if ISVAR("Config.AutoDressupHours"); Config.AutoDressupMinutes = Config.AutoDressupHours * 60
		else; Config.AutoDressupMinutes = 60
	}
	
	if !ISVAR("Config.ShellChangeComments"); Config.ShellChangeComments = 0
	if !ISVAR("Config.RightClickWaterFacts"); Config.RightClickWaterFacts = 0
	if !ISVAR("Config.RightClickEncouragement"); Config.RightClickEncouragement = 0
	if !ISVAR("legacyreloadlatch"); legacyreloadlatch = 0
	
	
	//——— 2.0.3 ———
	if !ISVAR("Config.HourNotifs")
	{
		if ISVAR("HourNotifs") && HourNotifs == "ON"; Config.HourNotifs = 1
		else; Config.HourNotifs = 0
	}
	ERASEVAR("HourNotifs")
	
	if !ISVAR("Config.EnableUninstall")
	{
		if ISVAR("deleteshitai") && deleteshitai == "ON"; Config.EnableUninstall = 1
		else; Config.EnableUninstall = 1
	}
	ERASEVAR("deleteshitai")
	
	if !ISVAR("Config.NotificationSound")
	{
		if ISVAR("notif"); Config.NotificationSound = notif
		else; Config.NotificationSound = "None"
	}
	ERASEVAR("notif")
	
	if !ISVAR("Config.NotificationVolume")
	{
		if ISVAR("volume"); Config.NotificationVolume = volume
		else; Config.NotificationVolume = 50
	}
	ERASEVAR("volume")
	
	if !ISVAR("Config.NotificationCustomPath")
	{
		if ISVAR("custom_sound_path"); Config.NotificationCustomPath = custom_sound_path
		else; Config.NotificationCustomPath = ""
	}
	ERASEVAR("custom_sound_path")
	
	if !ISVAR("Config.AutoShellChange"); Config.AutoShellChange = "Off"
	if !ISVAR("AutoShell.LastChangeTime"); AutoShell.LastChangeTime = GETSECCOUNT
	if !ISVAR("Config.AutoDressupChange"); Config.AutoDressupChange = "Off"
	
	
	//——— 2.0.2 ———
	if !ISVAR("Config.MatchShellPosition"); Config.MatchShellPosition = 1
	if !ISVAR("Config.AutoUpdates")
	{
		if ISVAR('AutoUpdates') && AutoUpdates[0] == "OFF"; Config.AutoUpdates = 0
		else; Config.AutoUpdates = 1
	}
	ERASEVAR("AutoUpdates")
	if !ISVAR("AutoUpdates.CheckedToday"); AutoUpdates.CheckedToday = 0
	if !ISVAR("AutoUpdates.GhostReady"); AutoUpdates.GhostReady = 0
	if !ISVAR("AutoUpdates.ShellReady"); AutoUpdates.ShellReady = 0
	if !ISVAR("AutoUpdates.BalloonReady"); AutoUpdates.BalloonReady = 0
	
	ERASEVAR("talkrate")
	ERASEVAR("timeouttime")
	
	
	//——— 2.0.1 ———
	if !ISVAR("Config.RemindWhenMinimized"); Config.RemindWhenMinimized = 0
	if !ISVAR("Scale.X")
	{
		Scale.X = nowscale
		if Scale.X == ""; Scale.X = 100
	}
	if !ISVAR("Scale.Y")
	{
		Scale.Y = nowscale
		if Scale.Y == ""; Scale.Y = 100
	}
	if !ISVAR("newhighscorelatch"); newhighscorelatch = 0
	
	//——— 2.0.0 ———
	if !ISVAR("Config.OffscreenDialogue"); Config.OffscreenDialogue = 0
	if !ISVAR("Config.IncludeCustomSound"); Config.IncludeCustomSound = 0
}

OnBoot
{
	if Config.AutoUpdates; "\![update,ghost+shell+balloon,checkonly]"
	--
	if Config.AutoShellChange == "On boot"
	{
		AutoShell.ChangingOnBoot = 1
		"\1\s[-1]\0\s[-1]\![change,shell,random,--option=raise-event]"
	}
	else
	{
		"\![embed,OnRandomDressup]"
		--
		//These are handled by the shell change function, so not needed above...
		OnGetShellAuthorInfo
		--
		OnSendStats
		--
		BootFinish
	}
}

BootFinish
{
	"\![quicksection,false]"
	--
	"\1\s[-1]\0\s[0]"
	--
	"(Thank you for choosing to hydrate today.)\w8\n\n"
	--
	if aitalkinterval == 0
	{
		"(Reminders are currently off.)\w8\n\n"
	}
	else
	{
		_rate = TalkRateLabel(aitalkinterval)
		"(Reminders are set to be issued every %(_rate).)\w8\n\n"
		"(Reminders are set for every %(_rate).)\w8\n\n"
		"(Reminders are set to every %(_rate).)\w8\n\n"
		"(You will be given reminders every %(_rate).)\w8\n\n"
		"(You will be given a reminder every %(_rate).)\w8\n\n"
	}
	--
	"(You've got this!)"
	"(Take care of yourself!)"
	"(Be good to you!)"
	"(It's ok to miss one,\w4 but try not to miss two in a row!)"
}

OnOtherGhostBooted
{
	OnSendStats
}

OnGhostCallComplete
{
	OnSendStats
}

OnClose
{
	OnSendStats //A bit superfluous perhaps...
	--
	if Stats.DrinksToday > 0
	{
		_s = "s"; if Stats.DrinksToday == 1; _s = ""
		"\0\s[0](You took %(Stats.DrinksToday) sip%(_s) of water today,\w4 well done!)"
	}
	else
	{
		"\0\s[0](Take care!)"
	}
	--
	"\w8\w8\-"
}

OnGhostChanging
{
	OnSendStats
	--
	if Stats.DrinksToday > 0
	{
		_s = "s"; if Stats.DrinksToday == 1; _s = ""
		"\0\s[0](You took %(Stats.DrinksToday) sip%(_s) of water today,\w4 well done!)"
	}
	else
	{
		//Undecided if I want to keep this...
		"\0\s[0](Remind %(reference0) to hydrate too!)"
	}
}