//----Drag and Drop----

OnInstallBegin
{
	"\0\s[0](Installing...)"
}

OnInstallComplete //Installing something ghost related
{
	if reference0 == "ghost"
	{
		"\0\s[0](Installed %(reference1).\w8\w8 Do you want to bring them here?)\n\n"
		--
		"\q[Change to %(reference1),ChangeToGhost]\n/
		\q[Call %(reference1),CallGhost]\n/
		\q[No thanks,cancelnodialogue]"
	}
	else
	{
		"\0\s[0](Installed %(reference1).)"
	}
}

Select.ChangeToGhost
{
	"\![change,ghost,lastinstalled]"
}

Select.CallGhost
{
	"\![call,ghost,lastinstalled]"
}

OnInstallFailure //If the install fails
{
	"\0\s[0](The install failed.\w8\w8\n\n"
	--
	if reference0 == "unsupported"
	{
		"The file isn't supported."
	}
	elseif reference0 == "extraction"
	{
		"It couldn't be extracted."
	}
	--
	")"
}

OnInstallRefuse
{
	"\0\s[0](Cannot install, this is meant for %(reference0).)"
}

OnUpdatedataCreating //Creating an updates2.dau
{
	"\0\s[0](Creating an updates2.dau file.)"
}

OnUpdatedataCreated //Finished creating
{
	"\0\s[0](Finished making the updates2.dau.)"
}

OnNarCreating //Creating a .nar
{
	"\0\s[0](Creating a .nar file.)\w8"
}

OnNarCreated //Finished creating
{
	"\0\s[0](Finished making the .nar file.)"
}

//----Uninstalling----

OnVanishSelecting //Bringing up the uninstall option
{
	"\0\s[0](Do you want to uninstall?)"
}

OnVanishSelected //Deciding to uninstall
{
	"\0\s[0](Take care of yourself, user!)\w8\w8"
}

OnVanishCancel //Changing your mind
{
	
}

OnVanished //When another ghost has been uninstalled and it switches to this ghost
{
	"\0\s[0](%(reference0) wasn't hydrated enough.)"
}

//----Network update---

OnUpdateCheckComplete //When the ghost finishes checking for updates
{
	if reference0 == "none" //If there are no new files
	{
		if AutoUpdates[1] != 1; "\0\s[0](There are no new files.)" //This if stops the dialogue from displaying if this check was performed automatically.
	}
	else
	{
		if AutoUpdates[1] == 1 //If this was an automatic check (always true but shrug)
		{
			AutoUpdates[1] = 1 //Sets it so it won't check again until at least midnight
			if reference0 == "none" //If there are no new files
			{
				if reference3 == "ghost"; AutoUpdates[3] = 0
				elseif reference3 == "shell"; AutoUpdates[4] = 0
				elseif reference3 == "balloon"; AutoUpdates[5] = 0
			}
			else
			{
				if reference3 == "ghost"; AutoUpdates[3] = 1
				elseif reference3 == "shell"; AutoUpdates[4] = 1
				elseif reference3 == "balloon"; AutoUpdates[5] = 1
			}
			--
			if reference3 == "ghost"; "\![update,shell,checkonly]"
			elseif reference3 == "shell"; "\![update,balloon,checkonly]"
			else; "\e Update Check Complete"
		}
	}
}

OnStartUpdate
{
	if reference0 == "ghost"
	{
		"\![updatebymyself]"
	}
	else
	{
		_cmd = ""
		if AutoUpdates[3] == 1; _cmd += "ghost+"
		if AutoUpdates[4] == 1; _cmd += "shell+"
		if AutoUpdates[5] == 1; _cmd += "balloon+"
		_cmd = ERASE(_cmd,(STRLEN(_cmd) - 1),1)
		"\![update,%(_cmd)]"
	}
}

OnUpdateBegin //Starting to actually update
{
	"\0\s[0](Beginning update.)\w8\w8"
}

OnUpdateReady
{
	reference0++ //Number of files starts from 0, so this displays the correct amount
	
	"\0\s[0](There are %(reference0) new files.)\w8\w8"
}

//When the update finishes. Don't forget to initialize any new variables you set, I'd recommend making a variable for each version you release, check if that variable is blank, and if it is then initialize variables for that update. That way no matter what version people update from, they get all the necessary variables.
OnUpdateComplete
{
	OnUpdateVars
	AutoUpdates[1] = 0
	if reference0 == "none"
	{
		"\0\s[0](There are no new files.)"
	}
	else
	{
		"\0\s[0](Update complete.)"
		--
		"\n\n\![*]\q[Show changelog,OnChangeLog]\n\![*]\q[Ok,NoChangelog]"
	}
}

ghostver
{
	"2.0.0"
}

OnChangeLog : all
{
	"\j[https://ukagaka.zichqec.com/ghost/hydrate#version_history]"
}

OnUpdateFailure //If the update fails
{
	if reference0 == "timeout" //If it timed out
	{
		"\0\s[0](The connection timed out.)"
	}
	elseif reference0 == "md5 miss" //If the update files have not been uploaded correctly and don't match the updates2.dau
	{
		"(The MD5 values don't match.\w8\w8 You should contact Zichqec and let her know.)"
	}
	elseif reference0 == "artificial" //If the user cancels the update by double clicking the balloon
	{
		"\0\s[0](Cancelled update.)"
	}
	else
	{
		"\0\s[0](Error: '%(reference0)'.)"
	}
}

OnUpdateOtherBegin
{
	if reference3 == "balloon"
	{
		"(Checking for updates to the current balloon, %(SHIORI3FW.BalloonName).)"
	}
	elseif reference3 == "shell"
	{
		"(Checking for updates to the current shell, %(SHIORI3FW.ShellName).)"
	}
	else
	{
		"(Beginning %(reference3) update.)"
	}
	--
	"\w8"
}

OnUpdateOtherReady
{
	reference0++
	"\0\s[0](There are %(reference0) new files.)\w8\w8"
}

OnUpdateOtherComplete
{
	AutoUpdates[1] = 0
	if reference0 == "none"
	{
		"\0\s[0](No new files for the current %(reference3) to update with.)"
	}
	else
	{
		"\0\s[0](Update complete!)"
	}
	
}

OnUpdateOtherFailure
{
	"\0(%(reference3) update failed: '%(reference0)'.)"
}

OnShellScaling
{
	Scale.X = reference0
	Scale.Y = reference2
	
	OnSendStats
	--
	"\0\s[0](%(reference0)% hydration.)"
}

OnSurfaceRestore
{
	"\0\s[0]"
}