//Hydrate stat share event
//Called when Hydrate boots, when another ghost boots, every hour, and when requested by a ghost
//It is usually returned as [NOTIFY], however it can be requested as [GET] by a ghost. If a ghost provides a name to return the event to, the event will be sent *exclusively* to that ghost as [GET]. This is ideal if you want to do something like run a check for the current shell immediately before making a comment. (However, it's recommended to only do this as needed, since Hydrate will ignore these requests while a drink reminder is waiting.)
//Otherwise, it is sent as notify so that ghosts may passively track Hydrate's stats while it is open.

/*
	
	reference0: Name of the ghost that sent this request (empty if this was not requested by a specific ghost)
	reference1: The same information that was sent by the requesting ghost as reference1 (empty if this was not requested by a specific ghost or no information was sent). This is to make it easier to implement checking stats immediately before commenting.
	reference2: Name of the current shell
	reference3: Currently blank, reserved for future use
	reference4: The current shell scaling (X only)
	reference5: Currently blank, reserved for future use
	reference6: Number of drinks today
	reference7: Number of drinks total
	reference8: Current drink streak (number of drinks in a row) (can span multiple sessions)
	reference9: Currently blank, reserved for future use
	reference10: Number of extra sips today
	reference11: Number of extra sips total
*/

//This intermediary step is because otherwise the boot events passed along their own references...
OnSendStats
{
	"\![embed,OnHydrateGhost.GetStats]"
}

OnHydrateGhost.GetStats : all
{
	_type = "notify"
	if reference0 != ""; _type = "raise"
	//if you request it by 1 specific ghost i should make it target that ghost...... that way you can do immediate ping responses
	//should i allow you to pass an arbitrary argument......? hm
	
	//ErrorLog("Sent stats with type '%(_type)'","info")
	
	_send = "%(currentdressups)" //DONT FORGET TO ESCAPE THIS -- currently not sending dressups as I'm undecided on what is a good delimiter and it's almost bedtime!
	_send = REPLACE(_send,",","|-|")
	//_delim = CHR(0xFDD0)
	//Maybe if I flip it around so that C_BYTE1 delimits the big chunks, that's better, since more SHIORI are likely to be able to easily parse that...? hmmm...
	
	if _type == "raise" //if it's raise, just send to the ghost that requested it
	{
		"\![raiseother,%(reference0),OnHydrateGhost.GetStats,""%(reference0)"",""%(reference1)"","
	}
	else //send to all if it's notify, always
	{
		"\![notifyother,__SYSTEM_ALL_GHOST__,OnHydrateGhost.GetStats,,,"
	}
	"""%(nowshell)"",,%(nowscale),,%(todayswaters),%(totalwaters),%(currentdrinkstreak),,%(extrasipstoday),%(extrasipstotal)]"
}













OnCommunicate
{
	//!!!!!!!!!!!!!!!!!!! DEPRECATED !!!!!!!!!!!!!!!!!!!
	//USE THE RAISEOTHER/NOTIFYOTHER METHOD INSTEAD
	//This method was a mistake because I didn't know better at the time
	//This is being kept for compatibility for now, but I may eventually remove it, so use the updated version instead!
	
	//Answering another ghost
	_nocomma = REPLACE(reference0,",","")
	_b = BalloonCheck
	LOGGING("Saw ping from: %(_nocomma). Balloon is: %(_b). Response...")
	//If the balloon is open AND this WAS NOT a message from the same ghost as last time
	if _b == 1 && "[commu-%(_nocomma)]" !_in_ SHIORI3FW.LastTalk
	{
		LOGGING("Store ping for later")
		waitingcommuS ,= reference0
		waitingcommuM ,= reference1
	}
	//if the balloon is closed and this WAS NOT a message from the same ghost as last time
	elseif "[commu-%(_nocomma)]" !_in_ SHIORI3FW.LastTalk
	{
		LOGGING("Reply")
		if reference0 == "|-|waitingcommu|-|"
		{
			LOGGING("To the stored message specifically")
			reference0 = waitingcommuS[0]; waitingcommuS[0] = IARRAY
			reference1 = waitingcommuM[0]; waitingcommuM[0] = IARRAY
		}
		--
		ReplyToGhost
	}
	//If it's the same ghost as last time
	else
	{
		LOGGING("Skipped everything lol")
	}
}

ReplyToGhost
{
	res_reference = reference0
	ConvoTag = SPLIT(reference1,"\e")[1]
	_nocomma = REPLACE(reference0,",","")
	
	if "HydrateStatsSilent" !_in_ reference1
	{
		"\0"
		--
		"(Stay hydrated,\w4 %(reference0)!)"
		"(Make sure to stay hydrated,\w4 %(reference0)!)"
		"(Make sure you get a drink of water if you're thirsty,\w4 %(reference0)!)"
	}
	--
	_send = "%(currentdressups)"
	_send = REPLACE(_send,",","|-|")
	"\e [commu-%(_nocomma)] %(ConvoTag),%(todayswaters),%(currentdrinkstreak),%(totalwaters),%(extrasipstoday),%(extrasipstotal),%(nowshell),%(_send),%(nowscale)"
	/*
	//!!!!!!!!!!!!!!!!!!! DEPRECATED !!!!!!!!!!!!!!!!!!!
	//USE THE RAISEOTHER/NOTIFYOTHER METHOD INSTEAD
	//This method was a mistake because I didn't know better at the time
	//This is being kept for compatibility for now, but I may eventually remove it, so use the updated version instead!
	
	0 is the \e and the ConvoTag you sent to Hydrate, if any. You can use this if you need to to ping Hydrate and see where you were in conversation when it replies!
	1 is the number of drinks the user has taken this session
	2 is the number of drinks they've taken in a row without missing one or dismissing the box
	3 is the total number of drinks they've taken since the ghost was installed
	4 is the current shell
	5 is a list of all dressups being used. They're split with the delimiter |-|, so as not to overlap with other items in the array. You'll have to break it down in your own ghost, maybe like so: _HYdressups = REPLACE(reference5,"|-|",",")
	
	Here's what I'm using with my ghosts if you just want to copy it:
	
	//!!!!!!!!!!!!!!!!!!! DEPRECATED !!!!!!!!!!!!!!!!!!!
	//USE THE RAISEOTHER/NOTIFYOTHER METHOD INSTEAD
	//This method was a mistake because I didn't know better at the time
	//This is being kept for compatibility for now, but I may eventually remove it, so use the updated version instead!
	ConvoTag = SPLIT(reference1,"\e")[1]
	_replyto = ConvoTag[0]
	_HYsession = TOINT(ConvoTag[1])
	_HYstreak = TOINT(ConvoTag[2])
	_HYtotal = TOINT(ConvoTag[3])
	_HYextratoday = TOINT(ConvoTag[4])
	_HYextratotal = TOINT(ConvoTag[5])
	_HYshell = ConvoTag[6]
	_HYdressups = REPLACE(ConvoTag[7],"|-|",",")
	_HYscale = TOINT(ConvoTag[8])
	
	
	Here's the code for recieving stats via the raiseother command. Note that it starts at reference1 because reference0 would be the ConvoTag, but no ConvoTag is needed here
	
	_HYsession = TOINT(reference1)
	_HYstreak = TOINT(reference2)
	_HYtotal = TOINT(reference3)
	_HYextratoday = TOINT(reference4)
	_HYextratotal = TOINT(reference5)
	_HYshell = reference6
	_HYdressups = REPLACE(reference7,"|-|",",")
	_HYscale = TOINT(reference8)
	*/
}

/*OnBalloonClose
{
	if waitingcommu[0] != ""; WaitingCommu
}

OnBalloonBreak
{
	if waitingcommu[0] != ""; WaitingCommu
}

OnBalloonTimeout
{
	if waitingcommu[0] != ""; WaitingCommu
}*/

WaitingCommu
{
	"\![raise,OnCommunicate,|-|waitingcommu|-|]"
}

//As the name implies, this checks if the balloon is currently open or not.
//To use it I would do this, so you don't have to copy this whole chunk of code:
//if BalloonCheck
BalloonCheck
{
	"balloon" _in_ status
}